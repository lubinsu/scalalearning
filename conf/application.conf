akka {
  loglevel = INFO
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    log-remote-lifecycle-events = on
    netty.tcp {
      hostname = "localhost"
      port = 0
    }
  }
  extensions = [
    "akka.contrib.pattern.DistributedPubSubExtension"
  ]

  cluster {
    seed-nodes = [
      "akka.tcp://cluster-risk-control@172.18.5.119:2551"
    ]

    auto-down-unreachable-after = 60
  }
}

spray.can.server {
  request-timeout = 5s
}

akka.contrib.cluster.pub-sub {
  # Actor name of the mediator actor, /user/distributedPubSubMediator
  name = distributedPubSubMediator

  # Start the mediator on members tagged with this role.
  # All members are used if undefined or empty.
  role = ""

  # How often the DistributedPubSubMediator should send out gossip information
  gossip-interval = 1s

  # Removed entries are pruned after this duration
  removed-time-to-live = 120s

  # The routing logic to use for 'Send'
  # Possible values: random, round-robin, broadcast
  routing-logic = round-robin
}
